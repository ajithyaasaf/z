1 factorial servlet

98% of storage used … If you run out, you can't create, edit, and upload files. Get 100 GB of storage for ₹130.00 ₹65.00/month for 6 months.
FactorialServlet.java
import FactorialBean.FactorialBean;
import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(urlPatterns = {"/FactorialServlet"})
public class FactorialServlet extends  HttpServlet{
    @EJB
    private FactorialBean FactorialBean;
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse res)
            throws ServletException, IOException {
        res.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = res.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Factorial Calculator</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Factorial Calculator</h1>");
            String numberParam = req.getParameter("number");
            if(numberParam!=null && !numberParam.isEmpty()){
                try{
                    int number = Integer.parseInt(numberParam);
                    int result = FactorialBean.CalculateFactorial(number);
                    out.println("<p> Factorial of"+number+"is :"+result+"</p>");
                }
                catch(NumberFormatException e)
                {
                    out.println("<p>Please Enter a valid number</p>");
                }
            }
            else
            {
                out.println("<p>Please enter a numbe in the url parameter, e.g.?number=5 </p>");
            }
            out.println("</body>");
            out.println("</html>");
        }
    }
}


2 factorial bean
98% of storage used … If you run out, you can't create, edit, and upload files. Get 100 GB of storage for ₹130.00 ₹65.00/month for 6 months.
FactorialBean.java
package FactorialBean;
import javax.ejb.Stateless;

@Stateless
public class FactorialBean{
    public int CalculateFactorial(int number){
        if(number==0 || number==1){
            return 1;
        }
        else
        {
            return number*CalculateFactorial(number-1);
        }
    }
}
